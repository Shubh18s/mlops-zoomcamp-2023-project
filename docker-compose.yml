version: '3.8'
services:
  mlflowdb:
    image: mysql:8.0
    restart: always
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - '3306:3306'
    volumes:
      - mlflowdb:/var/lib/mysql
    networks:
      - back-tier
    # healthcheck:
    #   test:  ["CMD", "mysql", "$$MYSQL_DATABASE", "-uroot", "-p$$MYSQL_ROOT_PASSWORD", "-e", "'SELECT 1;'"] # ["mysqladmin" ,"ping", "-h", "localhost", "-uroot", "-pmypassword"] #;
    #   interval: 1s
    #   timeout: 20s
    #   retries: 10
    #   start_period: 10s

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - back-tier
      - front-tier

  mlflowserver:
    container_name: mlflow_server
    restart: always
    build:
      context: ./config/mlflow
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/root/.gcp/credentials.json
    volumes:
      - /home/singh/.config/gcloud/application_default_credentials.json:/root/.gcp/credentials.json
    entrypoint: mlflow server --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mlflowdb:3306/${MYSQL_DATABASE} --default-artifact-root gs://citibike-mlops/mlflow/ --artifacts-destination gs://citibike-mlops/mlflow/ --host 0.0.0.0
    networks:
      - back-tier
    # depends_on:
    #   mlflowdb:
    #     condition: service_healthy

volumes:
  mlflowdb:
    driver: local
networks:
  front-tier:
  back-tier:




